@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This ensures that the OG preview is updated when the image is changed."
	@priority = "5"
	test PreviewAfterReplacingImage {
		property test.name.skip.portal.instance = "OpenGraphPreview#PreviewAfterReplacingImage";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			dontSave = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_1.png");

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			key_imageName = "Document_1.png",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			dontSave = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_2.jpeg");

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			key_imageName = "Document_2.jpeg",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		var key_imageName = "Document_1.png";

		AssertElementNotPresent(locator1 = "SitePagesEditPage#PREVIEW_IMAGE");

		Button.click(button = "Save");

		Navigator.gotoNavTab(navTab = "Open Graph");

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			key_imageName = "Document_2.jpeg",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		var key_imageName = "Document_1.png";

		AssertElementNotPresent(locator1 = "SitePagesEditPage#PREVIEW_IMAGE");
	}

	@description = "This ensures that the OG preview is inherited from the SEO."
	@priority = "5"
	test PreviewInheritedSEO {
		property test.name.skip.portal.instance = "OpenGraphPreview#PreviewInheritedSEO";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "SEO");

		AssertElementPresent(locator1 = "SitePagesEditPage#PREVIEW_SERP");

		PortletEntry.inputText(
			fieldLabel = "HTML Title",
			text = "Page HTML Title");

		PortletEntry.inputTextArea(
			fieldId = "GroupPagesPortlet_description",
			text = "Page Description");

		Button.clickSave();

		Navigator.gotoNavTab(navTab = "Open Graph");

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - Test Site Name - ${siteName}",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		OpenGraph.configureOpenGraph(
			customDescription = "This is a custom description",
			customTitle = "This is a custom title");

		Click(
			checkboxName = "Use Custom Title",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Click(
			checkboxName = "Use Custom Description",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Button.clickSave();

		Page.viewPreview(
			description = "Page Description",
			htmlTitle = "Page HTML Title - Test Site Name - ${siteName}",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		User.logoutPG();

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:title" content="Page HTML Title - Test Site Name - ${siteName}","og:description" content="Page Description"''');
	}

	@description = "This ensures that the user can customize OG tags."
	@priority = "5"
	test Smoke {
		property test.name.skip.portal.instance = "OpenGraphPreview#Smoke";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customDescription = "Custom Description",
			customImage = "true",
			customTitle = "Custom Title",
			dontSave = "true",
			pageName = "Test Page Name",
			uploadFileName = "Document_1.jpg");

		Page.viewPreview(
			description = "Custom Description",
			htmlTitle = "Custom Title - Test Site Name - ${siteName}",
			key_imageName = "Document_1.jpg",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Button.click(button = "Save");

		Navigator.gotoNavTab(navTab = "Open Graph");

		Page.viewPreview(
			description = "Custom Description",
			htmlTitle = "Custom Title - Test Site Name - ${siteName}",
			key_imageName = "Document_1.jpg",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

	@description = "This ensures that escape characters are present correctly in the preview."
	@priority = "3"
	test ValidateEscapeCharacters {
		property test.name.skip.portal.instance = "OpenGraphPreview#ValidateEscapeCharacters";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customDescription = '''description@#$%^&amp;*()~`1234567890''',
			customTitle = '''@#$%^&amp;*()~`1234567890title''',
			dontSave = "true");

		Page.viewPreview(
			description = '''description@#$%^&amp;*()~`1234567890''',
			htmlTitle = '''@#$%^&amp;*()~`1234567890title - Test Site Name - ${siteName}''',
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		Button.click(button = "Save");

		Navigator.gotoNavTab(navTab = "Open Graph");

		Page.viewPreview(
			description = '''description@#$%^&amp;*()~`1234567890''',
			htmlTitle = '''@#$%^&amp;*()~`1234567890title - Test Site Name - ${siteName}''',
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

	@description = "This test ensures that ellipses are shown in the preview when the text limit is reached."
	@priority = "5"
	test ValidateLongInputs {
		property test.name.skip.portal.instance = "OpenGraphPreview#ValidateLongInputs";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Long Test Page Name To Check The URL");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customDescription = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web applications called social applications",
			customTitle = "Liferay Portal provides an excellent platform for building web applications",
			dontSave = "true",
			pageName = "Long Test Page Name To Check The URL");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications - Test Site Name - ${siteName}",
			openGraph = "true",
			pageName = "Long Test Page Name To Check The URL",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name",
			truncatedHTMLTitle = "true",
			truncatedURL = "true");

		Button.click(button = "Save");

		Navigator.gotoNavTab(navTab = "Open Graph");

		Page.viewPreview(
			description = "Liferay Portal provides an excellent platform for building web applications, websites, and portals, but it can additionally be used for a new category of web ap…",
			htmlTitle = "Liferay Portal provides an excellent platform for building web applications - Test Site Name - ${siteName}",
			openGraph = "true",
			pageName = "Long Test Page Name To Check The URL",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name",
			truncatedHTMLTitle = "true",
			truncatedURL = "true");
	}

	@description = "This ensures that the OG preview is returned to default when deselecting the customize checkboxes."
	@priority = "5"
	test ValidateReturnToDefault {
		property test.name.skip.portal.instance = "OpenGraphPreview#ValidateReturnToDefault";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page Name");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customDescription = "This is a custom description",
			customTitle = "This is a custom title");

		Click(
			checkboxName = "Use Custom Title",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Click(
			checkboxName = "Use Custom Description",
			locator1 = "Checkbox#ANY_CHECKBOX");

		Button.clickSave();

		Page.viewPreview(
			htmlTitle = "Test Page Name - Test Site Name - ${siteName}",
			openGraph = "true",
			pageName = "Test Page Name",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");

		AssertTextEquals(
			locator1 = "SitePagesEditPage#PREVIEW_DESCRIPTION",
			value1 = "");
	}

	@description = "This test ensures that a user can preview Open Graph tags with Arabic."
	@priority = "4"
	test ViewArabicTranslation {
		property test.name.skip.portal.instance = "OpenGraphPreview#ViewArabicTranslation";
		var portalURL = PropsUtil.get("portal.url");
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		SitePages.openPagesAdmin(siteURLKey = "test-site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.changeLocale(
			fieldName = "openGraphTitleBoundingBox",
			locale = "ar-SA");

		OpenGraph.configureOpenGraph(
			customDescription = "وصف الاختبار",
			customTitle = "عنوان الاختبار",
			dontSave = "true");

		Page.viewPreview(
			description = "وصف الاختبار",
			htmlTitle = "عنوان الاختبار - Test Site Name - ${siteName}",
			openGraph = "true",
			pageName = "Test Page",
			portalURL = "${portalURL}",
			siteNameURL = "test-site-name");
	}

}